{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ConfigService = /*#__PURE__*/(() => {\n  class ConfigService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiBaseUrl;\n    }\n    handleError(error) {\n      if (error.status === 0) {\n        console.error('An error occurred:', error.error);\n      } else {\n        console.error(`Backend returned code ${error.status}, body was: `, error.error);\n      }\n      return throwError('Something bad happened; please try again later.');\n    }\n    post(endPoint, body) {\n      return this.http.post(this.baseUrl + endPoint, body).pipe(catchError(this.handleError));\n    }\n    static #_ = this.ɵfac = function ConfigService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConfigService,\n      factory: ConfigService.ɵfac\n    });\n  }\n  return ConfigService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}