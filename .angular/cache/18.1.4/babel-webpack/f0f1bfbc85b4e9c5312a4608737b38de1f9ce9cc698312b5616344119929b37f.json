{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let YGOservice = /*#__PURE__*/(() => {\n  class YGOservice {\n    constructor(http) {\n      this.http = http;\n      this.apiYgo = environment.apiYgo;\n    }\n    handleError(error) {\n      if (error.status === 0) {\n        console.error('An error occurred:', error.error);\n      } else {\n        console.error(`Backend returned code ${error.status}, body was: `, error.error);\n      }\n      return throwError('Something bad happened; please try again later.');\n    }\n    get(query) {\n      let params = new HttpParams();\n      Object.keys(query).forEach(function (key) {\n        params = params.append(key, query[key]);\n      });\n      return this.http.get(this.apiYgo, {\n        params: params\n      }).pipe(catchError(this.handleError));\n    }\n    static #_ = this.ɵfac = function YGOservice_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || YGOservice)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: YGOservice,\n      factory: YGOservice.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return YGOservice;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}