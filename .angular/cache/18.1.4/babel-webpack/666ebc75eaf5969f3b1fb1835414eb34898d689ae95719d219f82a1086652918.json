{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, booleanAttribute, ContentChild, Output, ContentChildren, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2 from 'ng-zorro-antd/core/services';\nimport { siderResponsiveMap } from 'ng-zorro-antd/core/services';\nimport { toCssPixel, inNextTick } from 'ng-zorro-antd/core/util';\nimport { NzMenuDirective } from 'ng-zorro-antd/menu';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i1$1 from '@angular/cdk/platform';\nimport * as i1$2 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"nz-sider-trigger\", \"\"];\nfunction NzSiderTriggerComponent_Conditional_0_ng_template_0_Template(rf, ctx) {}\nfunction NzSiderTriggerComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSiderTriggerComponent_Conditional_0_ng_template_0_Template, 0, 0, \"ng-template\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const defaultZeroTrigger_r2 = i0.ɵɵreference(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzZeroTrigger || defaultZeroTrigger_r2);\n  }\n}\nfunction NzSiderTriggerComponent_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction NzSiderTriggerComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSiderTriggerComponent_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const defaultTrigger_r3 = i0.ɵɵreference(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzTrigger || defaultTrigger_r3);\n  }\n}\nfunction NzSiderTriggerComponent_ng_template_2_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzType\", ctx_r0.nzCollapsed ? \"left\" : \"right\");\n  }\n}\nfunction NzSiderTriggerComponent_ng_template_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzType\", ctx_r0.nzCollapsed ? \"right\" : \"left\");\n  }\n}\nfunction NzSiderTriggerComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSiderTriggerComponent_ng_template_2_Conditional_0_Template, 1, 1, \"span\", 3)(1, NzSiderTriggerComponent_ng_template_2_Conditional_1_Template, 1, 1, \"span\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.nzReverseArrow ? 0 : 1);\n  }\n}\nfunction NzSiderTriggerComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n}\nfunction NzSiderComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function NzSiderComponent_Conditional_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setCollapsed(!ctx_r1.nzCollapsed));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matchBreakPoint\", ctx_r1.matchBreakPoint)(\"nzCollapsedWidth\", ctx_r1.nzCollapsedWidth)(\"nzCollapsed\", ctx_r1.nzCollapsed)(\"nzBreakpoint\", ctx_r1.nzBreakpoint)(\"nzReverseArrow\", ctx_r1.nzReverseArrow)(\"nzTrigger\", ctx_r1.nzTrigger)(\"nzZeroTrigger\", ctx_r1.nzZeroTrigger)(\"siderWidth\", ctx_r1.widthSetting);\n  }\n}\nlet NzContentComponent = /*#__PURE__*/(() => {\n  class NzContentComponent {\n    constructor(elementRef, renderer) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-layout-content');\n    }\n    static #_ = this.ɵfac = function NzContentComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzContentComponent,\n      selectors: [[\"nz-content\"]],\n      exportAs: [\"nzContent\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function NzContentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzContentComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzFooterComponent = /*#__PURE__*/(() => {\n  class NzFooterComponent {\n    constructor(elementRef, renderer) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-layout-footer');\n    }\n    static #_ = this.ɵfac = function NzFooterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzFooterComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzFooterComponent,\n      selectors: [[\"nz-footer\"]],\n      exportAs: [\"nzFooter\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function NzFooterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzFooterComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzHeaderComponent = /*#__PURE__*/(() => {\n  class NzHeaderComponent {\n    constructor(elementRef, renderer) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-layout-header');\n    }\n    static #_ = this.ɵfac = function NzHeaderComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzHeaderComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzHeaderComponent,\n      selectors: [[\"nz-header\"]],\n      exportAs: [\"nzHeader\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function NzHeaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzHeaderComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSiderTriggerComponent = /*#__PURE__*/(() => {\n  class NzSiderTriggerComponent {\n    constructor() {\n      this.nzCollapsed = false;\n      this.nzReverseArrow = false;\n      this.nzZeroTrigger = null;\n      this.nzTrigger = undefined;\n      this.matchBreakPoint = false;\n      this.nzCollapsedWidth = null;\n      this.siderWidth = null;\n      this.nzBreakpoint = null;\n      this.isZeroTrigger = false;\n      this.isNormalTrigger = false;\n    }\n    updateTriggerType() {\n      this.isZeroTrigger = this.nzCollapsedWidth === 0 && (this.nzBreakpoint && this.matchBreakPoint || !this.nzBreakpoint);\n      this.isNormalTrigger = this.nzCollapsedWidth !== 0;\n    }\n    ngOnInit() {\n      this.updateTriggerType();\n    }\n    ngOnChanges() {\n      this.updateTriggerType();\n    }\n    static #_ = this.ɵfac = function NzSiderTriggerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzSiderTriggerComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSiderTriggerComponent,\n      selectors: [[\"\", \"nz-sider-trigger\", \"\"]],\n      hostVars: 10,\n      hostBindings: function NzSiderTriggerComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"width\", ctx.isNormalTrigger ? ctx.siderWidth : null);\n          i0.ɵɵclassProp(\"ant-layout-sider-trigger\", ctx.isNormalTrigger)(\"ant-layout-sider-zero-width-trigger\", ctx.isZeroTrigger)(\"ant-layout-sider-zero-width-trigger-right\", ctx.isZeroTrigger && ctx.nzReverseArrow)(\"ant-layout-sider-zero-width-trigger-left\", ctx.isZeroTrigger && !ctx.nzReverseArrow);\n        }\n      },\n      inputs: {\n        nzCollapsed: \"nzCollapsed\",\n        nzReverseArrow: \"nzReverseArrow\",\n        nzZeroTrigger: \"nzZeroTrigger\",\n        nzTrigger: \"nzTrigger\",\n        matchBreakPoint: \"matchBreakPoint\",\n        nzCollapsedWidth: \"nzCollapsedWidth\",\n        siderWidth: \"siderWidth\",\n        nzBreakpoint: \"nzBreakpoint\"\n      },\n      exportAs: [\"nzSiderTrigger\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c1,\n      decls: 6,\n      vars: 2,\n      consts: [[\"defaultTrigger\", \"\"], [\"defaultZeroTrigger\", \"\"], [3, \"ngTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"], [\"nz-icon\", \"\", \"nzType\", \"bars\"]],\n      template: function NzSiderTriggerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSiderTriggerComponent_Conditional_0_Template, 1, 1, null, 2)(1, NzSiderTriggerComponent_Conditional_1_Template, 1, 1, null, 2)(2, NzSiderTriggerComponent_ng_template_2_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(4, NzSiderTriggerComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.isZeroTrigger ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.isNormalTrigger ? 1 : -1);\n        }\n      },\n      dependencies: [NgTemplateOutlet, NzIconModule, i1.NzIconDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSiderTriggerComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzSiderComponent = /*#__PURE__*/(() => {\n  class NzSiderComponent {\n    updateStyleMap() {\n      this.widthSetting = this.nzCollapsed ? `${this.nzCollapsedWidth}px` : toCssPixel(this.nzWidth);\n      this.flexSetting = `0 0 ${this.widthSetting}`;\n      this.cdr.markForCheck();\n    }\n    updateMenuInlineCollapsed() {\n      if (this.nzMenuDirective && this.nzMenuDirective.nzMode === 'inline' && this.nzCollapsedWidth !== 0) {\n        this.nzMenuDirective.setInlineCollapsed(this.nzCollapsed);\n      }\n    }\n    setCollapsed(collapsed) {\n      if (collapsed !== this.nzCollapsed) {\n        this.nzCollapsed = collapsed;\n        this.nzCollapsedChange.emit(collapsed);\n        this.updateMenuInlineCollapsed();\n        this.updateStyleMap();\n        this.cdr.markForCheck();\n      }\n    }\n    constructor(platform, cdr, breakpointService) {\n      this.platform = platform;\n      this.cdr = cdr;\n      this.breakpointService = breakpointService;\n      this.destroy$ = new Subject();\n      this.nzMenuDirective = null;\n      this.nzCollapsedChange = new EventEmitter();\n      this.nzWidth = 200;\n      this.nzTheme = 'dark';\n      this.nzCollapsedWidth = 80;\n      this.nzBreakpoint = null;\n      this.nzZeroTrigger = null;\n      this.nzTrigger = undefined;\n      this.nzReverseArrow = false;\n      this.nzCollapsible = false;\n      this.nzCollapsed = false;\n      this.matchBreakPoint = false;\n      this.flexSetting = null;\n      this.widthSetting = null;\n    }\n    ngOnInit() {\n      this.updateStyleMap();\n      if (this.platform.isBrowser) {\n        this.breakpointService.subscribe(siderResponsiveMap, true).pipe(takeUntil(this.destroy$)).subscribe(map => {\n          const breakpoint = this.nzBreakpoint;\n          if (breakpoint) {\n            inNextTick().subscribe(() => {\n              this.matchBreakPoint = !map[breakpoint];\n              this.setCollapsed(this.matchBreakPoint);\n              this.cdr.markForCheck();\n            });\n          }\n        });\n      }\n    }\n    ngOnChanges(changes) {\n      const {\n        nzCollapsed,\n        nzCollapsedWidth,\n        nzWidth\n      } = changes;\n      if (nzCollapsed || nzCollapsedWidth || nzWidth) {\n        this.updateStyleMap();\n      }\n      if (nzCollapsed) {\n        this.updateMenuInlineCollapsed();\n      }\n    }\n    ngAfterContentInit() {\n      this.updateMenuInlineCollapsed();\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzSiderComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzSiderComponent)(i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.NzBreakpointService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSiderComponent,\n      selectors: [[\"nz-sider\"]],\n      contentQueries: function NzSiderComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzMenuDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzMenuDirective = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-layout-sider\"],\n      hostVars: 18,\n      hostBindings: function NzSiderComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"flex\", ctx.flexSetting)(\"max-width\", ctx.widthSetting)(\"min-width\", ctx.widthSetting)(\"width\", ctx.widthSetting);\n          i0.ɵɵclassProp(\"ant-layout-sider-zero-width\", ctx.nzCollapsed && ctx.nzCollapsedWidth === 0)(\"ant-layout-sider-light\", ctx.nzTheme === \"light\")(\"ant-layout-sider-dark\", ctx.nzTheme === \"dark\")(\"ant-layout-sider-collapsed\", ctx.nzCollapsed)(\"ant-layout-sider-has-trigger\", ctx.nzCollapsible && ctx.nzTrigger !== null);\n        }\n      },\n      inputs: {\n        nzWidth: \"nzWidth\",\n        nzTheme: \"nzTheme\",\n        nzCollapsedWidth: \"nzCollapsedWidth\",\n        nzBreakpoint: \"nzBreakpoint\",\n        nzZeroTrigger: \"nzZeroTrigger\",\n        nzTrigger: \"nzTrigger\",\n        nzReverseArrow: [2, \"nzReverseArrow\", \"nzReverseArrow\", booleanAttribute],\n        nzCollapsible: [2, \"nzCollapsible\", \"nzCollapsible\", booleanAttribute],\n        nzCollapsed: [2, \"nzCollapsed\", \"nzCollapsed\", booleanAttribute]\n      },\n      outputs: {\n        nzCollapsedChange: \"nzCollapsedChange\"\n      },\n      exportAs: [\"nzSider\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 1,\n      consts: [[1, \"ant-layout-sider-children\"], [\"nz-sider-trigger\", \"\", 3, \"matchBreakPoint\", \"nzCollapsedWidth\", \"nzCollapsed\", \"nzBreakpoint\", \"nzReverseArrow\", \"nzTrigger\", \"nzZeroTrigger\", \"siderWidth\"], [\"nz-sider-trigger\", \"\", 3, \"click\", \"matchBreakPoint\", \"nzCollapsedWidth\", \"nzCollapsed\", \"nzBreakpoint\", \"nzReverseArrow\", \"nzTrigger\", \"nzZeroTrigger\", \"siderWidth\"]],\n      template: function NzSiderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, NzSiderComponent_Conditional_2_Template, 1, 8, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.nzCollapsible && ctx.nzTrigger !== null ? 2 : -1);\n        }\n      },\n      dependencies: [NzSiderTriggerComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSiderComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzLayoutComponent = /*#__PURE__*/(() => {\n  class NzLayoutComponent {\n    constructor(directionality) {\n      this.directionality = directionality;\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n      });\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzLayoutComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzLayoutComponent)(i0.ɵɵdirectiveInject(i1$2.Directionality));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzLayoutComponent,\n      selectors: [[\"nz-layout\"]],\n      contentQueries: function NzLayoutComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzSiderComponent, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzSiderComponent = _t);\n        }\n      },\n      hostAttrs: [1, \"ant-layout\"],\n      hostVars: 4,\n      hostBindings: function NzLayoutComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-layout-rtl\", ctx.dir === \"rtl\")(\"ant-layout-has-sider\", ctx.listOfNzSiderComponent.length > 0);\n        }\n      },\n      exportAs: [\"nzLayout\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function NzLayoutComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzLayoutComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzLayoutModule = /*#__PURE__*/(() => {\n  class NzLayoutModule {\n    static #_ = this.ɵfac = function NzLayoutModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzLayoutModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzLayoutModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzSiderComponent, NzSiderTriggerComponent]\n    });\n  }\n  return NzLayoutModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzContentComponent, NzFooterComponent, NzHeaderComponent, NzLayoutComponent, NzLayoutModule, NzSiderComponent, NzSiderTriggerComponent as ɵNzSiderTriggerComponent };\n//# sourceMappingURL=ng-zorro-antd-layout.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}